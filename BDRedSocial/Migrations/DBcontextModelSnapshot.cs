// <auto-generated />
using System;
using BDRedSocial.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BDRedSocial.Migrations
{
    [DbContext(typeof(DBcontext))]
    partial class DBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BDRedSocial.Data.Entidades.CargoRed", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CodCarRed")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("DescCargoRed")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.HasIndex(new[] { "CodCarRed" }, "Codigo_Cargo_Red")
                        .IsUnique();

                    b.ToTable("CargosRed");
                });

            modelBuilder.Entity("BDRedSocial.Data.Entidades.Puesto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CodPuesto")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("IDTrabajador")
                        .HasColumnType("int");

                    b.Property<int?>("TrabajadorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TrabajadorID");

                    b.HasIndex(new[] { "CodPuesto" }, "Codigo_Puesto")
                        .IsUnique();

                    b.ToTable("puestos");
                });

            modelBuilder.Entity("BDRedSocial.Data.Entidades.Trabajador", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CargoRedID")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Edad")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("CargoRedID");

                    b.HasIndex(new[] { "Correo" }, "Correo_Trabajador")
                        .IsUnique();

                    b.ToTable("Trabajadores");
                });

            modelBuilder.Entity("BDRedSocial.Data.Entidades.Puesto", b =>
                {
                    b.HasOne("BDRedSocial.Data.Entidades.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("TrabajadorID");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("BDRedSocial.Data.Entidades.Trabajador", b =>
                {
                    b.HasOne("BDRedSocial.Data.Entidades.CargoRed", null)
                        .WithMany("Trabajadores")
                        .HasForeignKey("CargoRedID");
                });

            modelBuilder.Entity("BDRedSocial.Data.Entidades.CargoRed", b =>
                {
                    b.Navigation("Trabajadores");
                });
#pragma warning restore 612, 618
        }
    }
}
